{"version":3,"sources":["components/shared/NewPost.jsx"],"names":["axios","require","NewPost","currentUserId","document","cookie","split","forEach","cookieString","useState","currentUser","setCurrentUser","useEffect","get","then","response","data","user","submitting","setSubmitting","postTitle","setPostTitle","postType","setPostType","featuredImg","setFeaturedImg","postBody","setPostBody","audioLink","setAudioLink","Date","programmeDate","setProgrammeDate","postBodyEmpty","setPostBodyEmpty","featuredImgEmpty","setFeaturedImgEmpty","createdPost","setCreatedPost","createPostError","setCreatePostError","featuredDesc","setFeaturedDesc","canPublish","users","filter","role","admin","dataObj","id","_id","notifications","type","body","slice","post","console","log","catch","err","className","variant","Link","href","onSubmit","e","preventDefault","reader","FileReader","postData","title","audio","createdBy","pending","addEventListener","featuredImage","result","status","message","readAsDataURL","xs","Group","controlId","Control","placeholder","required","value","onChange","target","Select","Label","selected","date","showTimeSelect","timeIntervals","dateFormat","files","theme","as","size","animation"],"mappings":"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","file":"static/js/30.179475cb.chunk.js","sourcesContent":["import ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nconst axios = require(\"axios\");\r\n\r\nconst NewPost = () => {\r\n  let currentUserId = \"\";\r\n  document.cookie.split(\";\").forEach((cookie) => {\r\n    const cookieString = cookie.split(\"=\");\r\n    if (cookieString[0] === \"uid\") {\r\n      currentUserId = cookieString[1];\r\n    }\r\n  });\r\n\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  useEffect(() => {\r\n    axios.get(`/users/${currentUserId}`).then((response) => {\r\n      setCurrentUser(() => response.data.user);\r\n    });\r\n  }, [currentUserId]);\r\n\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [postTitle, setPostTitle] = useState(\"\");\r\n  const [postType, setPostType] = useState(\"\");\r\n  const [featuredImg, setFeaturedImg] = useState(\"\");\r\n  const [postBody, setPostBody] = useState(\"\");\r\n  const [audioLink, setAudioLink] = useState(\"\");\r\n  const [programmeDate, setProgrammeDate] = useState(new Date());\r\n  const [postBodyEmpty, setPostBodyEmpty] = useState(false);\r\n  const [featuredImgEmpty, setFeaturedImgEmpty] = useState(false);\r\n  const [createdPost, setCreatedPost] = useState(null);\r\n  const [createPostError, setCreatePostError] = useState(null);\r\n  const [featuredDesc, setFeaturedDesc] = useState(\"\");\r\n\r\n  const sumitHandler = (e) => {\r\n    e.preventDefault();\r\n    setSubmitting(true);\r\n    if (postBody === \"\" || featuredImg === \"\") {\r\n      setSubmitting(false);\r\n      setPostBodyEmpty(true);\r\n      setFeaturedImgEmpty(true);\r\n    } else {\r\n      const reader = new FileReader();\r\n\r\n      // Create new post\r\n      let postData = {\r\n        title: postTitle,\r\n        type: postType,\r\n        body: postBody,\r\n        audio: audioLink !== \"\" ? audioLink : null,\r\n        createdBy: currentUser._id,\r\n        featuredDesc,\r\n        programmeDate: programmeDate !== \"\" ? programmeDate : null,\r\n        pending: currentUser.canPublish === true ? false : true,\r\n      };\r\n\r\n      reader.addEventListener(\"load\", () => {\r\n        postData.featuredImage = reader.result;\r\n        axios\r\n          .post(\"/posts/create\", postData)\r\n          .then((response) => {\r\n            if (response.data && response.data.status) {\r\n              setCreatedPost(response.data.post);\r\n            } else {\r\n              setCreatePostError(\r\n                response.data.message\r\n                  ? response.data.message\r\n                  : \"Oops.. network error\"\r\n              );\r\n              setSubmitting(false);\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      });\r\n      reader.readAsDataURL(featuredImg);\r\n    }\r\n  };\r\n\r\n  // Notify admins of post if created by editor\r\n  if (currentUser) {\r\n    if (!currentUser.canPublish && createdPost) {\r\n      axios\r\n        .get(\"/users/\")\r\n        .then((response) => {\r\n          const adminUsers = response.data.users.filter(\r\n            (user) => user.role === \"admin\"\r\n          );\r\n\r\n          adminUsers.forEach((admin) => {\r\n            let dataObj = {\r\n              id: admin._id,\r\n              notifications: [\r\n                ...admin.notifications,\r\n                {\r\n                  type: \"Pending post\",\r\n                  body: createdPost.featuredDesc.slice(0, 25),\r\n                },\r\n              ],\r\n            };\r\n            axios\r\n              .post(\"/users/notify\", dataObj)\r\n              .then((response) => console.log(response.data))\r\n              .catch((err) => console.log(err));\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white px-1 py-4 me-md-2 my-4\">\r\n      {createdPost && currentUser.canPublish && (\r\n        <Alert variant=\"success\" className=\"my-2\">\r\n          Post Published{\" \"}\r\n          <Alert.Link href={`/posts/${createdPost._id}`}>\r\n            Click here to view\r\n          </Alert.Link>\r\n        </Alert>\r\n      )}\r\n      {createdPost && !currentUser.canPublish && (\r\n        <Alert variant=\"warning\" className=\"my-2\">\r\n          Post pending review, you'll be notified when approved by admin\r\n        </Alert>\r\n      )}\r\n\r\n      {!createdPost && createPostError && (\r\n        <Alert variant=\"danger\" className=\"my-2\">\r\n          {createPostError}\r\n        </Alert>\r\n      )}\r\n      {!createdPost && (\r\n        <div>\r\n          <h4>New Post</h4>\r\n          <Form onSubmit={sumitHandler}>\r\n            <Row>\r\n              <Col xs={8}>\r\n                <Form.Group controlId=\"postTitle\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Add Title\"\r\n                    required={true}\r\n                    value={postTitle}\r\n                    onChange={(e) => setPostTitle(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Group controlId=\"postType\">\r\n                  <Form.Select\r\n                    onChange={(e) => setPostType(e.target.value)}\r\n                    required={true}\r\n                    value={postType}\r\n                  >\r\n                    <option value=\"\">Select Post Type</option>\r\n                    <option value=\"news\">News</option>\r\n                    <option value=\"blog\">Blog</option>\r\n                    <option value=\"sport\">Sport</option>\r\n                    <option value=\"airProgramme\">Air Programme</option>\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            {postType === \"airProgramme\" && (\r\n              <Row className=\"mt-4\">\r\n                <Col>\r\n                  <Form.Group controlId=\"programmeDate\" className=\"mb-3\">\r\n                    <Form.Label>Select Programme Date</Form.Label>\r\n                    <DatePicker\r\n                      selected={programmeDate}\r\n                      onChange={(date) => setProgrammeDate(date)}\r\n                      showTimeSelect\r\n                      timeIntervals={10}\r\n                      dateFormat=\"Pp\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n\r\n                <Col>\r\n                  <Form.Group controlId=\"audioLink\" className=\"mb-3\">\r\n                    <Form.Label>Audio Link</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"https://streams.radiomast.io/...\"\r\n                      required={true}\r\n                      onChange={(e) => setAudioLink(e.target.value)}\r\n                      value={audioLink}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n            )}\r\n\r\n            <Row className=\"my-3\">\r\n              <Col>\r\n                <Form.Group controlId=\"featuredImage\" className=\"mb-3\">\r\n                  <Form.Label>Featured Desc</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Post description\"\r\n                    required={true}\r\n                    value={featuredDesc}\r\n                    onChange={(e) => setFeaturedDesc(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group controlId=\"featuredImage\" className=\"mb-3\">\r\n                  <Form.Label>Featured Image</Form.Label>\r\n                  <Form.Control\r\n                    type=\"file\"\r\n                    onChange={(e) => setFeaturedImg(e.target.files[0])}\r\n                  />\r\n                </Form.Group>\r\n                {featuredImgEmpty && (\r\n                  <Alert variant=\"danger\" className=\"m-1\">\r\n                    Choose featured Image\r\n                  </Alert>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row className=\"my-4 p\">\r\n              <ReactQuill\r\n                theme=\"snow\"\r\n                placeholder=\"Post Content... start writting\"\r\n                onChange={setPostBody}\r\n              />\r\n\r\n              {postBodyEmpty && (\r\n                <Alert variant=\"danger\" className=\"mx-2 mt-5\">\r\n                  Add text to post\r\n                </Alert>\r\n              )}\r\n            </Row>\r\n\r\n            <Button variant=\"info\" type=\"submit\" className=\"text-white mt-5\">\r\n              {submitting ? (\r\n                <span>\r\n                  <Spinner\r\n                    as=\"span\"\r\n                    size=\"sm\"\r\n                    animation=\"border\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                  <span className=\"mx-1\">Creating...</span>\r\n                </span>\r\n              ) : (\r\n                <span>Create New Post</span>\r\n              )}\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n"],"sourceRoot":""}