{"version":3,"sources":["components/Login.jsx","../node_modules/react-bootstrap/esm/Alert.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useIsomorphicEffect.js"],"names":["axios","require","Login","useEffect","document","title","useState","submitting","setSubmitting","email","setEmail","password","setPassword","clientError","setClientError","history","useHistory","forgotPassword","setForgotPassword","recoveryEmail","setRecoveryEmail","recoveryDataError","setRecoveryDataError","recoveryLinkSent","setRecoveryLinkSent","className","xs","style","padding","src","fluid","width","height","variant","onSubmit","e","preventDefault","credentials","post","then","response","data","status","date","Date","setTime","getTime","expires","toUTCString","cookie","user","_id","push","message","catch","err","console","log","Group","controlId","Label","Control","type","placeholder","required","value","onChange","target","as","size","animation","role","href","onClick","show","onHide","centered","Header","Title","Body","clientInfo","DivStyledAsH4","divWithClassName","displayName","AlertHeading","createWithBsPrefix","Component","AlertLink","Anchor","defaultProps","transition","Fade","closeLabel","Alert","React","uncontrolledProps","ref","useUncontrolled","bsPrefix","closeVariant","children","onClose","dismissible","props","prefix","useBootstrapPrefix","handleClose","useEventCallback","Transition","alert","_jsxs","undefined","classNames","_jsx","CloseButton","unmountOnExit","in","Object","assign","Link","Heading","WeakMap","_excluded","_ref","onKeyDown","source","excluded","key","i","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","useButtonProps","tagName","buttonProps","handleKeyDown","trim","isReactNative","global","navigator","product","isDOM","useLayoutEffect"],"mappings":"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","file":"static/js/19.c58a5510.chunk.js","sourcesContent":["import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst axios = require(\"axios\");\r\n\r\nconst Login = () => {\r\n  useEffect(() => {\r\n    document.title = \"Login | DiamondFM\";\r\n  });\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [clientError, setClientError] = useState(null);\r\n  const history = useHistory();\r\n  const [forgotPassword, setForgotPassword] = useState(false);\r\n  const hideModal = () => setForgotPassword(false);\r\n  const [recoveryEmail, setRecoveryEmail] = useState(\"\");\r\n  const [recoveryDataError, setRecoveryDataError] = useState(null);\r\n  const [recoveryLinkSent, setRecoveryLinkSent] = useState(false);\r\n\r\n  const passRecoveryHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const clientInfo = { email: recoveryEmail };\r\n    axios\r\n      .post(\"/users/forget-password\", clientInfo)\r\n      .then((response) => {\r\n        if (!response.data.status) {\r\n          setRecoveryDataError(response.data.message);\r\n        } else {\r\n          setRecoveryLinkSent(true);\r\n          setRecoveryDataError(null);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const loginHandler = (e) => {\r\n    e.preventDefault();\r\n    setSubmitting(true);\r\n    const credentials = { email, password };\r\n\r\n    axios\r\n      .post(\"/users/auth\", credentials)\r\n      .then((response) => {\r\n        if (!response) {\r\n          setClientError(\"Error logging In\");\r\n          setSubmitting(false);\r\n        } else if (!response.data.status) {\r\n          setClientError(response.data.message);\r\n          setSubmitting(false);\r\n        } else {\r\n          let date = new Date();\r\n          date.setTime(date.getTime() + 15 * 24 * 60 * 60 * 1000);\r\n          let expires = date.toUTCString();\r\n          document.cookie = `uid=${response.data.user._id};expires=${expires};path=/;`;\r\n          history.push(\"/df-dashboard\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setClientError(\"Error logging In\");\r\n        setSubmitting(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid\">\r\n        <Row className=\"h-100\">\r\n          <Col xs={6} style={{ padding: \"0\" }} className=\"d-none d-lg-block\">\r\n            <Image\r\n              src=\"/media/authLeft.png\"\r\n              fluid\r\n              style={{ width: \"100%\", height: \"99.9vh\" }}\r\n            />\r\n          </Col>\r\n          <Col style={{ height: \"95vh\" }}>\r\n            <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n              <section className=\"w-100 px-md-5 ps-lg-5\">\r\n                <div className=\"d-flex mb-4 align-items-center\">\r\n                  <Image src=\"/media/icon.png\" className=\"me-2\" />\r\n                  <h5 className=\"fw-bolder\">DiamondFM</h5>\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"fw-bold mb-4\">SIGN IN</h4>\r\n                  {clientError && <Alert variant=\"danger\">{clientError}</Alert>}\r\n                  <Form onSubmit={loginHandler}>\r\n                    <Row className=\"mb-3\">\r\n                      <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                          type=\"email\"\r\n                          placeholder=\"johndoe@gmail.com\"\r\n                          required={true}\r\n                          value={email}\r\n                          onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                      </Form.Group>\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\">\r\n                      <Form.Group controlId=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                          type=\"password\"\r\n                          placeholder=\"********\"\r\n                          required={true}\r\n                          value={password}\r\n                          onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                      </Form.Group>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                      <Col>\r\n                        <Button\r\n                          variant=\"info\"\r\n                          type=\"submit\"\r\n                          className=\"text-white mb-3\"\r\n                        >\r\n                          {submitting ? (\r\n                            <span>\r\n                              <Spinner\r\n                                as=\"span\"\r\n                                size=\"sm\"\r\n                                animation=\"border\"\r\n                                role=\"status\"\r\n                                aria-hidden=\"true\"\r\n                              />\r\n                              <span className=\"mx-1\">Loading...</span>\r\n                            </span>\r\n                          ) : (\r\n                            <span>Sign In</span>\r\n                          )}\r\n                        </Button>\r\n                      </Col>\r\n                      <Col></Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <p>\r\n                        Forgot Password?{\" \"}\r\n                        <a\r\n                          href=\"/\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setForgotPassword(true);\r\n                          }}\r\n                        >\r\n                          Reset Password\r\n                        </a>\r\n                      </p>\r\n                    </Row>\r\n                  </Form>\r\n                </div>\r\n              </section>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n      <Modal size=\"sm\" show={forgotPassword} onHide={hideModal} centered>\r\n        <Modal.Header>\r\n          <Modal.Title>Password Recovery</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <h5>Email Address</h5>\r\n          <Form onSubmit={passRecoveryHandler}>\r\n            <Row className=\"mb-3\">\r\n              {recoveryDataError && (\r\n                <Alert variant=\"danger\">{recoveryDataError}</Alert>\r\n              )}\r\n\r\n              {recoveryLinkSent ? (\r\n                <Alert variant=\"success\">\r\n                  Recovery link sent, kindly check your email\r\n                </Alert>\r\n              ) : (\r\n                <div>\r\n                  <Form.Group controlId=\"email\">\r\n                    <Form.Label>\r\n                      Provide the email attached with your account\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      placeholder=\"Your email\"\r\n                      required={true}\r\n                      value={recoveryEmail}\r\n                      onChange={(e) => setRecoveryEmail(e.target.value)}\r\n                    />\r\n                  </Form.Group>\r\n                  <Button\r\n                    variant=\"info\"\r\n                    type=\"submit\"\r\n                    className=\"my-3 ms-2 w-75\"\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </Row>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nconst AlertLink = createWithBsPrefix('alert-link', {\n  Component: Anchor\n});\nconst defaultProps = {\n  variant: 'primary',\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show,\n    closeLabel,\n    closeVariant,\n    className,\n    children,\n    variant,\n    onClose,\n    dismissible,\n    transition,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nvar targetMap = new WeakMap();\nvar resizeObserver;\n\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(function (entries) {\n    entries.forEach(function (entry) {\n      var handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\n\n\nexport default function useResizeObserver(element) {\n  var _useState = useState(null),\n      rect = _useState[0],\n      setRect = _useState[1];\n\n  useEffect(function () {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, function (rect) {\n      setRect(rect);\n    });\n    return function () {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    onKeyDown\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n\n  if (isTrivialHref(props.href) && !props.role || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;"],"sourceRoot":""}