{"version":3,"sources":["components/ResetPassword.jsx"],"names":["axios","require","ResetPassword","useEffect","document","title","userId","useParams","useState","password","setPassword","passwordUpdated","setPasswordUpdated","className","variant","Link","href","onSubmit","e","preventDefault","length","credentials","post","then","response","data","status","catch","err","console","log","Group","controlId","Label","Control","type","placeholder","required","value","onChange","target","Text"],"mappings":"2LAQMA,EAAQC,EAAQ,IAiFPC,UA/EO,WACpBC,qBAAU,WACRC,SAASC,MAAQ,iCAGnB,IAAQC,EAAWC,cAAXD,OAER,EAAgCE,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8CF,mBAAS,MAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KAqBA,OACE,8BACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAKC,UAAU,OAAf,UACuB,YAApBF,EACC,eAAC,IAAD,CAAOG,QAAQ,UAAf,0CACgC,IAC9B,cAAC,IAAMC,KAAP,CAAYC,KAAK,gBAAjB,0BAEoB,aAApBL,EACF,cAAC,IAAD,CAAOG,QAAQ,SAAf,qCACE,KAEJ,cAAC,IAAD,IACA,eAAC,IAAD,WACE,8CACA,cAAC,IAAD,CAAMG,SAnCS,SAACC,GAExB,GADAA,EAAEC,iBACEV,EAASW,QAAU,EAAG,CACxB,IAAMC,EAAc,CAAEf,SAAQG,YAE9BT,EACGsB,KAAK,wBAAyBD,GAC9BE,MAAK,SAACC,GACDA,EAASC,KAAKC,OAChBd,EAAmB,WAEnBA,EAAmB,eAGtBe,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAoBV,SACE,cAAC,IAAD,CAAKf,UAAU,OAAf,SAGE,gCACE,eAAC,IAAKkB,MAAN,CAAYC,UAAU,QAAtB,UACE,cAAC,IAAKC,MAAN,kCACA,cAAC,IAAKC,QAAN,CACEC,KAAK,WACLC,YAAY,eACZC,UAAU,EACVC,MAAO7B,EACP8B,SAAU,SAACrB,GAAD,OAAOR,EAAYQ,EAAEsB,OAAOF,aAG5B,KAAb7B,GAAmBA,EAASW,OAAS,GACpC,cAAC,IAAKqB,KAAN,CAAW5B,UAAU,mBAArB,sDAIF,cAAC,IAAD,CAAQC,QAAQ,OAAOqB,KAAK,SAAStB,UAAU,aAA/C,8BAOR,cAAC,IAAD","file":"static/js/29.bb4f0e57.chunk.js","sourcesContent":["import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nconst axios = require(\"axios\");\r\n\r\nconst ResetPassword = () => {\r\n  useEffect(() => {\r\n    document.title = \"Reset Password | Diamond FM\";\r\n  });\r\n\r\n  const { userId } = useParams();\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordUpdated, setPasswordUpdated] = useState(null);\r\n\r\n  const passResetHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password.length >= 8) {\r\n      const credentials = { userId, password };\r\n\r\n      axios\r\n        .post(\"/users/reset-password\", credentials)\r\n        .then((response) => {\r\n          if (response.data.status) {\r\n            setPasswordUpdated(\"updated\");\r\n          } else {\r\n            setPasswordUpdated(\"!updated\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row className=\"mt-5\">\r\n          {passwordUpdated === \"updated\" ? (\r\n            <Alert variant=\"success\">\r\n              Password updated successfully{\" \"}\r\n              <Alert.Link href=\"/df-dashboard\">dashboard</Alert.Link>\r\n            </Alert>\r\n          ) : passwordUpdated === \"!updated\" ? (\r\n            <Alert variant=\"danger\">Error Updating password</Alert>\r\n          ) : null}\r\n\r\n          <Col></Col>\r\n          <Col>\r\n            <h5>New Password</h5>\r\n            <Form onSubmit={passResetHandler}>\r\n              <Row className=\"mb-3\">\r\n                {/* <Alert variant=\"danger\">Error</Alert>\r\n                <Alert variant=\"success\">Success...</Alert> */}\r\n                <div>\r\n                  <Form.Group controlId=\"email\">\r\n                    <Form.Label>Create New Password</Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"New Password\"\r\n                      required={true}\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                  </Form.Group>\r\n                  {password !== \"\" && password.length < 8 && (\r\n                    <Form.Text className=\"text-danger mb-3\">\r\n                      Password should be at least 8 characters\r\n                    </Form.Text>\r\n                  )}\r\n                  <Button variant=\"info\" type=\"submit\" className=\"my-3 w-100\">\r\n                    create\r\n                  </Button>\r\n                </div>\r\n              </Row>\r\n            </Form>\r\n          </Col>\r\n          <Col></Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"sourceRoot":""}