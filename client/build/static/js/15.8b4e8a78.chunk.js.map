{"version":3,"sources":["../node_modules/react-bootstrap/esm/Image.js","components/Signup.jsx","../node_modules/warning/warning.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/react-bootstrap/esm/Button.js"],"names":["Image","PropTypes","string","bool","React","ref","bsPrefix","className","fluid","rounded","roundedCircle","thumbnail","props","useBootstrapPrefix","_jsx","classNames","displayName","defaultProps","axios","require","Signup","useEffect","document","title","useState","firstname","setFirstname","lastname","setLastname","email","setEmail","role","setRole","password","setPassword","passwordMatch","setPasswordMatch","avatar","setAvatar","submitting","setSubmitting","renderConfPassMatchHint","setRenderConfPassMatchHint","userError","setUserError","history","useHistory","xs","style","padding","src","width","height","variant","Link","href","onSubmit","e","preventDefault","length","data","reader","FileReader","addEventListener","a","result","post","userInstance","status","date","Date","setTime","getTime","expires","toUTCString","cookie","user","_id","push","message","readAsDataURL","then","response","catch","err","console","log","Group","controlId","Label","Control","type","placeholder","value","required","onChange","target","Select","Text","accept","name","files","as","size","animation","warning","module","exports","propTypes","tooltip","elementType","Feedback","Component","FormContext","FormCheckInput","id","isValid","isInvalid","useContext","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","disabled","feedbackTooltip","feedback","feedbackType","label","children","innerFormContext","useMemo","hasLabel","input","Provider","_jsxs","_Fragment","Object","assign","Input","FormControl","classes","htmlSize","plaintext","readOnly","createWithBsPrefix","FormGroup","context","FormLabel","column","visuallyHidden","columnClass","Col","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","_ref","any","validated","Form","Floating","FormFloating","Check","Range","Button","active","prefix","useButtonProps","tagName","buttonProps"],"mappings":"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","file":"static/js/15.8b4e8a78.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nconst defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nconst Image = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  fluid,\n  rounded,\n  roundedCircle,\n  thumbnail,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  return /*#__PURE__*/_jsx(\"img\", {\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid && `${bsPrefix}-fluid`, rounded && `rounded`, roundedCircle && `rounded-circle`, thumbnail && `${bsPrefix}-thumbnail`)\n  });\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;","// import logo from \"./logo.svg\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Image from \"react-bootstrap/Image\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst axios = require(\"axios\");\n\nfunction Signup() {\n  useEffect(() => {\n    document.title = \"Sign Up | Diamond FM\";\n  });\n\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [role, setRole] = useState(null);\n  const [password, setPassword] = useState(\"\");\n  const [passwordMatch, setPasswordMatch] = useState(\"\");\n  const [avatar, setAvatar] = useState(null);\n  const [submitting, setSubmitting] = useState(false);\n  const [renderConfPassMatchHint, setRenderConfPassMatchHint] = useState(false);\n\n  const [userError, setUserError] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (password === passwordMatch) {\n      setRenderConfPassMatchHint(false);\n    }\n  }, [password, passwordMatch]);\n\n  const signupHandler = (e) => {\n    e.preventDefault();\n    setSubmitting(true);\n\n    if (password.length < 8 || password !== passwordMatch) {\n      setSubmitting(false);\n    } else {\n      let data = {\n        firstname,\n        lastname,\n        email,\n        role,\n        password,\n      };\n\n      // iF user enters avatar convert to base 64\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", async () => {\n        data.avatar = reader.result;\n\n        const userInstance = await axios.post(\"/users\", data);\n        if (!userInstance.data.status) {\n          setUserError(userInstance.data.message);\n        } else {\n          let date = new Date();\n          date.setTime(date.getTime() + 15 * 24 * 60 * 60 * 1000);\n          let expires = date.toUTCString();\n          document.cookie = `uid=${userInstance.data.user._id};expires=${expires};path=/;`;\n          history.push(\"/df-dashboard\");\n        }\n        setSubmitting(false);\n      });\n\n      if (avatar) {\n        reader.readAsDataURL(avatar);\n      } else {\n        axios\n          .post(\"/users\", data)\n          .then((response) => {\n            if (response.status && response.data.status) {\n              let date = new Date();\n              date.setTime(date.getTime() + 15 * 24 * 60 * 60 * 1000);\n              let expires = date.toUTCString();\n              document.cookie = `uid=${response.data.user._id};expires=${expires};path=/;`;\n              history.push(\"/df-dashboard\");\n            } else {\n              setUserError(response.data.message);\n              setSubmitting(false);\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n            setSubmitting(false);\n          });\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"container-fluid\">\n        <Row className=\"h-100\">\n          <Col xs={6} style={{ padding: \"0\" }} className=\"d-none d-lg-block\">\n            <Image\n              src=\"/media/authLeft.png\"\n              fluid\n              style={{ width: \"100%\", height: \"99.9vh\" }}\n            />\n          </Col>\n          <Col style={{ height: \"95vh\" }}>\n            <div className=\"d-flex justify-content-center align-items-center h-100\">\n              <section className=\"w-100 px-md-5 ps-lg-5\">\n                <div className=\"d-flex mb-4 align-items-center\">\n                  <Image src=\"/media/icon.png\" className=\"me-2\" />\n                  <h5 className=\"fw-bolder\">DiamondFM</h5>\n                </div>\n                <div>\n                  <h4 className=\"fw-bold mb-4\">SIGN UP</h4>\n                  {userError ? (\n                    <Alert variant=\"danger\">\n                      {userError}{\" \"}\n                      <Alert.Link href=\"/df-login\">Login Instead</Alert.Link>\n                    </Alert>\n                  ) : null}\n\n                  <Form onSubmit={signupHandler}>\n                    <Row className=\"mb-3\">\n                      <Col>\n                        <Form.Group controlId=\"firstname\">\n                          <Form.Label>First Name</Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            placeholder=\"John\"\n                            value={firstname}\n                            required={true}\n                            onChange={(e) => setFirstname(e.target.value)}\n                          />\n                        </Form.Group>\n                      </Col>\n                      <Col>\n                        <Form.Group controlId=\"lastname\">\n                          <Form.Label>Last Name</Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            placeholder=\"Doe\"\n                            value={lastname}\n                            required={true}\n                            onChange={(e) => setLastname(e.target.value)}\n                          />\n                        </Form.Group>\n                      </Col>\n                    </Row>\n\n                    <Row className=\"mb-3\">\n                      <Col>\n                        <Form.Group controlId=\"email\">\n                          <Form.Label>Email Address</Form.Label>\n                          <Form.Control\n                            type=\"email\"\n                            placeholder=\"johndoe@gmail.com\"\n                            value={email}\n                            required={true}\n                            onChange={(e) => setEmail(e.target.value)}\n                          />\n                        </Form.Group>\n                      </Col>\n                      <Col>\n                        <Form.Group controlId=\"role\">\n                          <Form.Label>Role</Form.Label>\n                          <Form.Select\n                            onChange={(e) => setRole(e.target.value)}\n                            required={true}\n                          >\n                            <option value=\"\">Select</option>\n                            <option value=\"editor\">Editor</option>\n                            <option value=\"admin\">Admin</option>\n                          </Form.Select>\n                          {role === \"\" && (\n                            <Form.Text className=\"text-danger\">\n                              Select a role! Editor or Admin\n                            </Form.Text>\n                          )}\n                        </Form.Group>\n                      </Col>\n                    </Row>\n\n                    <Row className=\"mb-3\">\n                      <Col>\n                        <Form.Group controlId=\"password\">\n                          <Form.Label>Create Password</Form.Label>\n                          <Form.Control\n                            type=\"password\"\n                            placeholder=\"*******\"\n                            value={password}\n                            required={true}\n                            onChange={(e) => setPassword(e.target.value)}\n                          />\n                        </Form.Group>\n                        {password !== \"\" && password.length < 8 && (\n                          <Form.Text className=\"text-danger\">\n                            Password should be at least 8 characters\n                          </Form.Text>\n                        )}\n                      </Col>\n                      <Col>\n                        <Form.Group controlId=\"matchPassword\">\n                          <Form.Label>Confirm Password</Form.Label>\n                          <Form.Control\n                            type=\"password\"\n                            placeholder=\"*******\"\n                            value={passwordMatch}\n                            required={true}\n                            onChange={(e) => {\n                              setPasswordMatch(e.target.value);\n                              setRenderConfPassMatchHint(true);\n                            }}\n                          />\n                        </Form.Group>\n\n                        {renderConfPassMatchHint && (\n                          <Form.Text className=\"text-danger\">\n                            Should match your password\n                          </Form.Text>\n                        )}\n                      </Col>\n                    </Row>\n\n                    <Row className=\"mb-3\">\n                      <Col>\n                        <Form.Group controlId=\"avatar\">\n                          <Form.Label>Profile picture</Form.Label>\n                          <Form.Control\n                            type=\"file\"\n                            accept=\".png, .jpg, jpeg\"\n                            name=\"avatar\"\n                            onChange={(e) => setAvatar(e.target.files[0])}\n                          />\n                        </Form.Group>\n                      </Col>\n                      <Col></Col>\n                    </Row>\n\n                    <Row>\n                      <Col>\n                        <Button\n                          variant=\"info\"\n                          type=\"submit\"\n                          className=\"text-white\"\n                        >\n                          {submitting ? (\n                            <span>\n                              <Spinner\n                                as=\"span\"\n                                size=\"sm\"\n                                animation=\"border\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                              />\n                              <span className=\"mx-1\">Creating...</span>\n                            </span>\n                          ) : (\n                            <span>Create Account</span>\n                          )}\n                        </Button>\n                      </Col>\n                      <Col>\n                        <p>\n                          Own an account already?{\" \"}\n                          <a href=\"/df-login\">Sign In</a>{\" \"}\n                        </p>\n                      </Col>\n                    </Row>\n                  </Form>\n                </div>\n              </section>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = label != null && label !== false && !children;\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, label && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, { ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", { ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", { ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, { ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;"],"sourceRoot":""}