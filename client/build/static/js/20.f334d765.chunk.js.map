{"version":3,"sources":["components/shared/Posts.jsx","components/shared/AirProgrammes.jsx","components/shared/ForDash.jsx","components/shared/UpdatePost.jsx"],"names":["axios","require","Posts","postLimit","useState","posts","setPosts","postsError","setPostsError","deleting","setDeleting","showDelDialog","setShowDelDialog","delPostId","setDelPostId","handleClose","displayUpdatePost","setDisplayUpdatePost","useEffect","get","then","response","data","status","reverse","filter","post","type","slice","show","onHide","Header","closeButton","Title","Body","Footer","variant","onClick","id","delete","catch","err","console","log","style","minHeight","className","map","index","src","featuredImage","rounded","width","height","title","featuredDesc","createdAt","split","comments","length","cursor","renderUpdatePost","backgroundColor","_id","AirProgrammes","Date","programmeDate","toLocaleTimeString","ForDash","UpdatePost","currentUserId","document","cookie","forEach","cookieString","currentUser","setCurrentUser","user","createdBy","creator","body","postBody","setPostBody","submitting","setSubmitting","postTitle","setPostTitle","postType","setPostType","featuredImg","setFeaturedImg","audio","audioLink","setAudioLink","setFeaturedDesc","setProgrammeDate","updatePostError","setUpdatePostError","updatedPost","setUpdatedPost","canPublish","users","role","admin","dataObj","notifications","suggestion","Heading","onSubmit","e","preventDefault","reader","FileReader","postData","pending","addEventListener","result","readAsDataURL","xs","Group","controlId","Control","placeholder","required","value","onChange","target","Select","Label","selected","date","showTimeSelect","timeIntervals","dateFormat","files","theme","as","size","animation"],"mappings":"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","file":"static/js/20.f334d765.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Image from \"react-bootstrap/esm/Image\";\r\nimport Alert from \"react-bootstrap/esm/Alert\";\r\nimport Modal from \"react-bootstrap/esm/Modal\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport Loader from \"./Loader\";\r\nimport UpdatePost from \"./UpdatePost\";\r\nconst axios = require(\"axios\");\r\n\r\nconst Posts = ({ postLimit }) => {\r\n  const [posts, setPosts] = useState(null);\r\n  const [postsError, setPostsError] = useState(null);\r\n  const [deleting, setDeleting] = useState(false);\r\n  const [showDelDialog, setShowDelDialog] = useState(false);\r\n  const [delPostId, setDelPostId] = useState(\"\");\r\n  const handleClose = () => setShowDelDialog(false);\r\n  const handleShow = () => setShowDelDialog(true);\r\n  const [displayUpdatePost, setDisplayUpdatePost] = useState(null);\r\n\r\n  const renderUpdatePost = (post) => {\r\n    setDisplayUpdatePost(post);\r\n  };\r\n\r\n  const deletePostHandler = (id) => {\r\n    setDeleting(true);\r\n    axios\r\n      .delete(`/posts/${id}`)\r\n      .then((response) => {\r\n        axios.get(\"/posts\").then((response) => {\r\n          if (!response.data) {\r\n            setPostsError(\"Error getting posts\");\r\n          } else if (!response.data.status) {\r\n            setPostsError(\"No post created yet... Add new\");\r\n          } else {\r\n            setDeleting(false);\r\n            if (postLimit) {\r\n              setPosts(\r\n                response.data.posts\r\n                  .reverse()\r\n                  .filter((post) => post.type !== \"airProgramme\")\r\n                  .slice(0, postLimit)\r\n              );\r\n            } else {\r\n              setPosts(\r\n                response.data.posts\r\n                  .reverse()\r\n                  .filter((post) => post.type !== \"airProgramme\")\r\n              );\r\n            }\r\n          }\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n    handleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/posts\").then((response) => {\r\n      if (!response.data) {\r\n        setPostsError(\"Error getting posts\");\r\n      } else if (!response.data.status) {\r\n        setPostsError(\"No post created yet... Add new\");\r\n      } else {\r\n        if (postLimit) {\r\n          setPosts(\r\n            response.data.posts\r\n              .reverse()\r\n              .filter((post) => post.type !== \"airProgramme\")\r\n              .slice(0, postLimit)\r\n          );\r\n        } else {\r\n          setPosts(\r\n            response.data.posts\r\n              .reverse()\r\n              .filter((post) => post.type !== \"airProgramme\")\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }, [postLimit]);\r\n\r\n  return (\r\n    <div>\r\n      <Modal show={showDelDialog} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Post</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Woohoo, Do you want to delete post?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Not at all\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={() => deletePostHandler(delPostId)}>\r\n            Yes, delete post\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {posts && !displayUpdatePost ? (\r\n        <section\r\n          style={{ minHeight: \"80px\" }}\r\n          className=\"bg-white px-3 py-4 me-md-2 my-3 rounded-3 shadow\"\r\n        >\r\n          <h4>Recent Posts</h4>\r\n          {deleting && <Loader />}\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"d-none d-md-table-cell\">No</th>\r\n                <th>Post Title</th>\r\n                <th className=\"d-none d-md-table-cell\">Type</th>\r\n                <th className=\"d-none d-md-table-cell\">Date</th>\r\n                <th className=\"d-none d-md-table-cell\">\r\n                  <i className=\"bi bi-chat-left-text me-2 fw-bolder h4\"></i>\r\n                </th>\r\n                <th>Edit</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {posts.map((post, index) => {\r\n                return (\r\n                  <tr className=\"my-5\" key={post._id}>\r\n                    <td className=\"d-none d-md-table-cell\">\r\n                      <span className=\"px-3 py-1 bg-info rounded text-white\">\r\n                        {index + 1}\r\n                      </span>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <Image\r\n                          src={post.featuredImage}\r\n                          rounded\r\n                          width=\"80px\"\r\n                          height=\"70px\"\r\n                          className=\"d-none d-md-block\"\r\n                        />\r\n\r\n                        <section className=\"ms-2\">\r\n                          <p className=\"fw-bold mb-0\">\r\n                            {post.title.slice(0, 20) + \"...\"}\r\n                          </p>\r\n                          <p className=\"mb-0\">\r\n                            {post.featuredDesc.slice(0, 40) + \"...\"}\r\n                          </p>\r\n                        </section>\r\n                      </div>\r\n                    </td>\r\n\r\n                    <td className=\"d-none d-md-table-cell\">\r\n                      <p>{post.type}</p>\r\n                    </td>\r\n                    <td className=\"d-none d-md-table-cell\">\r\n                      <p>{post.createdAt.split(\"T\")[0]}</p>\r\n                    </td>\r\n                    <td className=\"d-none d-md-table-cell\">\r\n                      <p>{post.comments.length}</p>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"d-flex flex-nowrap align-items-center justify-content-center\">\r\n                        {/* <a\r\n                          href={\"/df-dashboard/update-post/\" + post._id}\r\n                          className=\"text-black\"\r\n                        >\r\n                          <i className=\"bi bi-pencil-square fw-bolder h5\"></i>\r\n                        </a> */}\r\n\r\n                        <i\r\n                          className=\"bi bi-pencil-square fw-bolder h5\"\r\n                          style={{\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          onClick={() => {\r\n                            renderUpdatePost(post);\r\n                          }}\r\n                        ></i>\r\n\r\n                        <span\r\n                          style={{\r\n                            backgroundColor: \"#FB9195\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          className=\"rounded ms-1 p-1\"\r\n                        >\r\n                          <i\r\n                            className=\"bi bi-trash fw-bolder text-white h5\"\r\n                            onClick={() => {\r\n                              setDelPostId(post._id);\r\n                              handleShow();\r\n                            }}\r\n                          ></i>\r\n                        </span>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </section>\r\n      ) : postsError ? (\r\n        <Alert variant=\"warning\">{postsError}</Alert>\r\n      ) : displayUpdatePost ? (\r\n        <UpdatePost post={displayUpdatePost} />\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import { useState, useEffect } from \"react\";\r\nimport Image from \"react-bootstrap/esm/Image\";\r\nimport Alert from \"react-bootstrap/esm/Alert\";\r\nimport Modal from \"react-bootstrap/esm/Modal\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport Loader from \"./Loader\";\r\nimport UpdatePost from \"./UpdatePost\";\r\nconst axios = require(\"axios\");\r\n\r\nconst AirProgrammes = ({ postLimit }) => {\r\n  const [posts, setPosts] = useState(null);\r\n  const [postsError, setPostsError] = useState(null);\r\n  const [deleting, setDeleting] = useState(false);\r\n  const [showDelDialog, setShowDelDialog] = useState(false);\r\n  const [delPostId, setDelPostId] = useState(\"\");\r\n  const handleClose = () => setShowDelDialog(false);\r\n  const handleShow = () => setShowDelDialog(true);\r\n  const [displayUpdatePost, setDisplayUpdatePost] = useState(null);\r\n\r\n  const renderUpdatePost = (post) => {\r\n    setDisplayUpdatePost(post);\r\n  };\r\n\r\n  const deletePostHandler = (id) => {\r\n    setDeleting(true);\r\n    axios\r\n      .delete(`/posts/${id}`)\r\n      .then((response) => {\r\n        axios.get(\"/posts\").then((response) => {\r\n          if (!response.data) {\r\n            setPostsError(\"Error getting posts\");\r\n          } else if (!response.data.status) {\r\n            setPostsError(\"No post created yet... Add new\");\r\n          } else {\r\n            setDeleting(false);\r\n            if (postLimit) {\r\n              setPosts(\r\n                response.data.posts\r\n                  .reverse()\r\n                  .filter((post) => post.type === \"airProgramme\")\r\n                  .slice(0, postLimit)\r\n              );\r\n            } else {\r\n              setPosts(\r\n                response.data.posts\r\n                  .reverse()\r\n                  .filter((post) => post.type === \"airProgramme\")\r\n              );\r\n            }\r\n          }\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n    handleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/posts\").then((response) => {\r\n      if (!response.data) {\r\n        setPostsError(\"Error getting posts\");\r\n      } else if (!response.data.status) {\r\n        setPostsError(\"No post created yet... Add new\");\r\n      } else {\r\n        if (postLimit) {\r\n          setPosts(\r\n            response.data.posts\r\n              .reverse()\r\n              .filter((post) => post.type === \"airProgramme\")\r\n              .slice(0, postLimit)\r\n          );\r\n        } else {\r\n          setPosts(\r\n            response.data.posts\r\n              .reverse()\r\n              .filter((post) => post.type === \"airProgramme\")\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }, [postLimit]);\r\n\r\n  return (\r\n    <div>\r\n      <Modal show={showDelDialog} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Programme</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Woohoo, Do you want to delete programme?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Not at all\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={() => deletePostHandler(delPostId)}>\r\n            Yes, delete post\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {posts && !displayUpdatePost ? (\r\n        <section\r\n          style={{ minHeight: \"80px\" }}\r\n          className=\"bg-white px-3 py-4 me-md-2 my-3 rounded-3 shadow\"\r\n        >\r\n          <h4>Recent Programme</h4>\r\n          {deleting && <Loader />}\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"d-none d-md-table-cell\">No</th>\r\n                <th>Programme Title</th>\r\n                <th className=\"d-none d-md-table-cell\">Time</th>\r\n                <th className=\"d-none d-md-table-cell\">Date</th>\r\n                <th className=\"d-none d-md-table-cell\">\r\n                  <i className=\"bi bi-chat-left-text me-2 fw-bolder h4\"></i>\r\n                </th>\r\n                <th>Edit</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {posts.map((post, index) => {\r\n                return (\r\n                  <tr className=\"my-5\" key={post._id}>\r\n                    <td className=\"d-none d-md-table-cell\">\r\n                      <span\r\n                        className=\"px-3 py-1 rounded text-white\"\r\n                        style={{ backgroundColor: \"#003A70\" }}\r\n                      >\r\n                        {index + 1}\r\n                      </span>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <Image\r\n                          src={post.featuredImage}\r\n                          rounded\r\n                          width=\"80px\"\r\n                          height=\"70px\"\r\n                          className=\"d-none d-md-block\"\r\n                        />\r\n\r\n                        <section className=\"ms-2\">\r\n                          <p className=\"fw-bold mb-0\">\r\n                            {post.title.slice(0, 20) + \"...\"}\r\n                          </p>\r\n                          <p className=\"mb-0\">\r\n                            {post.featuredDesc.slice(0, 40) + \"...\"}\r\n                          </p>\r\n                        </section>\r\n                      </div>\r\n                    </td>\r\n\r\n                    <td className=\"d-none d-md-table-cell\">\r\n                      <p>\r\n                        {new Date(post.programmeDate).toLocaleTimeString(\r\n                          \"en-US\"\r\n                        )}\r\n                      </p>\r\n                    </td>\r\n                    <td className=\"d-none d-md-table-cell\">\r\n                      <p>{post.programmeDate.split(\"T\")[0]}</p>\r\n                    </td>\r\n                    <td className=\"d-none d-md-table-cell\">\r\n                      <p>{post.comments.length}</p>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"d-flex flex-nowrap align-items-center justify-content-center\">\r\n                        <i\r\n                          className=\"bi bi-pencil-square fw-bolder h5\"\r\n                          style={{\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          onClick={() => {\r\n                            renderUpdatePost(post);\r\n                          }}\r\n                        ></i>\r\n\r\n                        <span\r\n                          style={{\r\n                            backgroundColor: \"#FB9195\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          className=\"rounded ms-1 p-1\"\r\n                        >\r\n                          <i\r\n                            className=\"bi bi-trash fw-bolder text-white h5\"\r\n                            onClick={() => {\r\n                              setDelPostId(post._id);\r\n                              handleShow();\r\n                            }}\r\n                          ></i>\r\n                        </span>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </section>\r\n      ) : postsError ? (\r\n        <Alert variant=\"warning\">{postsError}</Alert>\r\n      ) : displayUpdatePost ? (\r\n        <UpdatePost post={displayUpdatePost} />\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AirProgrammes;\r\n","import AirProgrammes from \"./AirProgrammes\";\r\nimport Posts from \"./Posts\";\r\n\r\nconst ForDash = () => {\r\n  return (\r\n    <>\r\n      <Posts postLimit={4} />\r\n      <AirProgrammes postLimit={2} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForDash;\r\n","import ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nconst axios = require(\"axios\");\r\n\r\nconst UpdatePost = ({ post }) => {\r\n  let currentUserId = \"\";\r\n  document.cookie.split(\";\").forEach((cookie) => {\r\n    const cookieString = cookie.split(\"=\");\r\n    if (cookieString[0] === \"uid\") {\r\n      currentUserId = cookieString[1];\r\n    }\r\n  });\r\n\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  useEffect(() => {\r\n    axios.get(`/users/${currentUserId}`).then((response) => {\r\n      setCurrentUser(() => response.data.user);\r\n    });\r\n  }, [currentUserId]);\r\n\r\n  const [creator] = useState(post.createdBy);\r\n  // const [oldPostData, setOldPostData] = useState(post);\r\n  const [postBody, setPostBody] = useState(post.body);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [postTitle, setPostTitle] = useState(post.title);\r\n  const [postType, setPostType] = useState(post.type);\r\n  const [featuredImg, setFeaturedImg] = useState(post.featuredImage);\r\n  const [audioLink, setAudioLink] = useState(post.audio);\r\n  const [featuredDesc, setFeaturedDesc] = useState(post.featuredDesc);\r\n  const [programmeDate, setProgrammeDate] = useState(\r\n    new Date(post.programmeDate)\r\n  );\r\n\r\n  const [updatePostError, setUpdatePostError] = useState(null);\r\n  const [updatedPost, setUpdatedPost] = useState(false);\r\n\r\n  const sumitHandler = (e) => {\r\n    e.preventDefault();\r\n    setSubmitting(true);\r\n\r\n    // Reader to convert Image file to base64\r\n    const reader = new FileReader();\r\n\r\n    let postData = {\r\n      id: post._id,\r\n      title: postTitle,\r\n      type: postType,\r\n      body: postBody,\r\n      audio: audioLink !== \"\" ? audioLink : null,\r\n      createdBy: creator,\r\n      featuredDesc,\r\n      programmeDate: programmeDate !== \"\" ? programmeDate : null,\r\n      pending: currentUser.canPublish,\r\n    };\r\n    // console.log(postData);\r\n\r\n    // convert image to base 64 if updated and add it to postData\r\n    if (typeof featuredImg !== \"string\") {\r\n      reader.addEventListener(\"load\", () => {\r\n        postData.featuredImage = reader.result;\r\n        axios\r\n          .post(\"/posts/update\", postData)\r\n          .then((response) => {\r\n            if (response.data && response.data.status) {\r\n              setUpdatedPost(true);\r\n            } else {\r\n              setUpdatePostError(\"Oops.. error updating post\");\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      });\r\n      reader.readAsDataURL(featuredImg);\r\n      setSubmitting(false);\r\n    } else {\r\n      postData.featuredImage = featuredImg;\r\n      axios\r\n        .post(\"/posts/update\", postData)\r\n        .then((response) => {\r\n          if (response.data && response.data.status) {\r\n            setUpdatedPost(true);\r\n          } else {\r\n            setUpdatePostError(\"Oops.. error updating post\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Notify admins of post if created by !userCanPublish\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      if (currentUser && !currentUser.canPublish && updatedPost) {\r\n        //   const postId = oldPostData.id;\r\n        axios\r\n          .get(\"/users/\")\r\n          .then((response) => {\r\n            const adminUsers = response.data.users.filter(\r\n              (user) => user.role === \"admin\"\r\n            );\r\n            adminUsers.forEach((admin) => {\r\n              let dataObj = {\r\n                id: admin._id,\r\n                notifications: [\r\n                  ...admin.notifications,\r\n                  {\r\n                    type: \"Pending post updated\",\r\n                    body: featuredDesc.slice(0, 25),\r\n                  },\r\n                ],\r\n              };\r\n              axios\r\n                .post(\"/users/notify\", dataObj)\r\n                .then((response) => console.log(response.data))\r\n                .catch((err) => console.log(err));\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    }\r\n  }, [currentUser, featuredDesc, updatedPost]);\r\n\r\n  return (\r\n    <div className=\"bg-white px-1 py-4 me-md-2 my-4\">\r\n      {post.suggestion && (\r\n        <Alert variant=\"warning\">\r\n          <Alert.Heading>Changes suggested by admin</Alert.Heading>\r\n          {post.suggestion}\r\n        </Alert>\r\n      )}\r\n      {updatedPost && !updatePostError && (\r\n        <Alert variant=\"success\" className=\"my-2\">\r\n          Post updated successfully\r\n        </Alert>\r\n      )}\r\n\r\n      {updatePostError && !updatedPost && (\r\n        <Alert variant=\"danger\" className=\"my-2\">\r\n          {updatePostError}\r\n        </Alert>\r\n      )}\r\n      {!updatedPost && (\r\n        <div>\r\n          <h4 className=\"mb-4\">Update Post</h4>\r\n\r\n          <Form onSubmit={sumitHandler}>\r\n            <Row>\r\n              <Col xs={8}>\r\n                <Form.Group controlId=\"postTitle\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Add Title\"\r\n                    required={true}\r\n                    value={postTitle}\r\n                    onChange={(e) => setPostTitle(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Group controlId=\"postType\">\r\n                  <Form.Select\r\n                    onChange={(e) => setPostType(e.target.value)}\r\n                    required={true}\r\n                    value={postType}\r\n                  >\r\n                    <option value=\"\">Select Post Type</option>\r\n                    <option value=\"news\">News</option>\r\n                    <option value=\"blog\">Blog</option>\r\n                    <option value=\"sport\">Sport</option>\r\n                    <option value=\"airProgramme\">Air Programme</option>\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            {postType === \"airProgramme\" && (\r\n              <Row className=\"mt-4\">\r\n                <Col>\r\n                  <Form.Group controlId=\"programmeDate\" className=\"mb-3\">\r\n                    <Form.Label>Select Programme Date</Form.Label>\r\n                    <DatePicker\r\n                      selected={programmeDate}\r\n                      onChange={(date) => setProgrammeDate(date)}\r\n                      showTimeSelect\r\n                      value={programmeDate}\r\n                      timeIntervals={10}\r\n                      dateFormat=\"Pp\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n\r\n                <Col>\r\n                  <Form.Group controlId=\"audioLink\" className=\"mb-3\">\r\n                    <Form.Label>Audio Link</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"https://streams.radiomast.io/...\"\r\n                      required={true}\r\n                      onChange={(e) => setAudioLink(e.target.value)}\r\n                      value={audioLink}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n            )}\r\n\r\n            <Row className=\"my-3\">\r\n              <Col>\r\n                <Form.Group controlId=\"featuredImage\" className=\"mb-3\">\r\n                  <Form.Label>Featured Desc</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Post description\"\r\n                    required={true}\r\n                    value={featuredDesc}\r\n                    onChange={(e) => setFeaturedDesc(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group controlId=\"featuredImage\" className=\"mb-3\">\r\n                  <Form.Label>Featured Image</Form.Label>\r\n                  <Form.Control\r\n                    type=\"file\"\r\n                    onChange={(e) => setFeaturedImg(e.target.files[0])}\r\n                  />\r\n                </Form.Group>\r\n                {featuredImg.length < 1 && (\r\n                  <Alert variant=\"danger\" className=\"m-1\">\r\n                    Choose featured Image\r\n                  </Alert>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row className=\"my-4\">\r\n              <ReactQuill\r\n                theme=\"snow\"\r\n                placeholder=\"Post Content... start writting\"\r\n                onChange={setPostBody}\r\n                value={postBody}\r\n              />\r\n\r\n              {postBody.length <= 11 && (\r\n                <Alert variant=\"danger\" className=\"mx-2 mt-5\">\r\n                  Add text to post\r\n                </Alert>\r\n              )}\r\n            </Row>\r\n\r\n            <Button variant=\"info\" type=\"submit\" className=\"text-white mt-5\">\r\n              {submitting ? (\r\n                <span>\r\n                  <Spinner\r\n                    as=\"span\"\r\n                    size=\"sm\"\r\n                    animation=\"border\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                  <span className=\"mx-1\">Creating...</span>\r\n                </span>\r\n              ) : (\r\n                <span>Update Post</span>\r\n              )}\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdatePost;\r\n"],"sourceRoot":""}