{"version":3,"sources":["components/shared/Loader.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Loader","className","style","height","zIndex","animation","Signup","lazy","Login","ResetPassword","Dashboard","FePosts","SinglePost","Home","Policy","Contact","About","Presenters","App","fallback","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iGAAA,kCAeeA,UAbA,WACb,OACE,cAAC,IAAD,UACE,qBACEC,UAAU,mDACVC,MAAO,CAAEC,OAAQ,OAAQC,OAAQ,MAFnC,SAIE,cAAC,IAAD,CAASC,UAAU,iB,6ICNrBC,EAASC,gBAAK,kBAAM,+DACpBC,EAAQD,gBAAK,kBAAM,sEACnBE,EAAgBF,gBAAK,kBAAM,gEAC3BG,EAAYH,gBAAK,kBAAM,6EACvBI,EAAUJ,gBAAK,kBAAM,sEACrBK,EAAaL,gBAAK,kBAAM,sEACxBM,EAAON,gBAAK,kBAAM,8EAClBO,EAASP,gBAAK,kBAAM,sEACpBQ,EAAUR,gBAAK,kBAAM,sEACrBS,EAAQT,gBAAK,kBAAM,sEACnBU,EAAaV,gBAAK,kBAAM,sEAwBfW,EAtBH,WACV,OACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUC,SAAU,cAACnB,EAAA,QAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoB,KAAK,IAAIC,OAAK,EAACC,UAAWT,IACjC,cAAC,IAAD,CAAOO,KAAK,oBAAoBE,UAAWX,IAC3C,cAAC,IAAD,CAAOS,KAAK,aAAaE,UAAWV,IACpC,cAAC,IAAD,CAAOQ,KAAK,oBAAoBE,UAAWhB,IAC3C,cAAC,IAAD,CAAOc,KAAK,YAAYE,UAAWd,IACnC,cAAC,IAAD,CAAOY,KAAK,0BAA0BE,UAAWb,IACjD,cAAC,IAAD,CAAOW,KAAK,gBAAgBE,UAAWZ,IACvC,cAAC,IAAD,CAAOU,KAAK,kBAAkBE,UAAWR,IACzC,cAAC,IAAD,CAAOM,KAAK,WAAWE,UAAWP,IAClC,cAAC,IAAD,CAAOK,KAAK,SAASE,UAAWN,IAChC,cAAC,IAAD,CAAOI,KAAK,cAAcE,UAAWL,YClBhCM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.24952d01.chunk.js","sourcesContent":["import Container from \"react-bootstrap/Container\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nconst Loader = () => {\r\n  return (\r\n    <Container>\r\n      <div\r\n        className=\"d-flex justify-content-center align-items-center\"\r\n        style={{ height: \"40vh\", zIndex: \"10\" }}\r\n      >\r\n        <Spinner animation=\"border\" />\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { Suspense, lazy } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Loader from \"./components/shared/Loader\";\r\nconst Signup = lazy(() => import(\"./components/Signup\"));\r\nconst Login = lazy(() => import(\"./components/Login\"));\r\nconst ResetPassword = lazy(() => import(\"./components/ResetPassword\"));\r\nconst Dashboard = lazy(() => import(\"./components/Dashboard\"));\r\nconst FePosts = lazy(() => import(\"./components/FePosts\"));\r\nconst SinglePost = lazy(() => import(\"./components/SinglePost\"));\r\nconst Home = lazy(() => import(\"./components/Home\"));\r\nconst Policy = lazy(() => import(\"./components/Policy\"));\r\nconst Contact = lazy(() => import(\"./components/shared/Contact\"));\r\nconst About = lazy(() => import(\"./components/About\"));\r\nconst Presenters = lazy(() => import(\"./components/Presenters\"));\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Suspense fallback={<Loader />}>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/posts/post/:type\" component={FePosts} />\r\n          <Route path=\"/posts/:id\" component={SinglePost} />\r\n          <Route path=\"/df-new-keymaster\" component={Signup} />\r\n          <Route path=\"/df-login\" component={Login} />\r\n          <Route path=\"/reset-password/:userId\" component={ResetPassword} />\r\n          <Route path=\"/df-dashboard\" component={Dashboard} />\r\n          <Route path=\"/privacy-policy\" component={Policy} />\r\n          <Route path=\"/contact\" component={Contact} />\r\n          <Route path=\"/about\" component={About} />\r\n          <Route path=\"/presenters\" component={Presenters} />\r\n        </Switch>\r\n      </Suspense>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}